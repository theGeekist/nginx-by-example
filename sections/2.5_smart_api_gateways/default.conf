# Rate limiting zone per tenant
limit_req_zone $http_authorization zone=api_limit:10m rate=5r/s;

upstream api_backend {
    server 127.0.0.1:3100;
}

upstream auth_backend {
    server 127.0.0.1:3101;
}

server {
    listen 443 ssl;
    server_name api.localhost;
    include /etc/nginx/sites-enabled/ssl_params;

    location /api/ {
        auth_request /validate_token;
        auth_request_set $tenant_id $upstream_http_x_tenant_id;

        limit_req zone=api_limit burst=10 nodelay;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Tenant-ID $tenant_id;

        proxy_pass http://api_backend;
    }

    location = /validate_token {
        internal;
        proxy_pass http://auth_backend/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header Authorization $http_authorization;
    }
}

# API backend (just returns tenant ID)
server {
    listen 3100;
    location / {
        return 200 "API Response for tenant: $http_x_tenant_id\n";
    }
}

# Auth backend emulate token validation
server {
    listen 3101;

    location /validate {
        # Validate "Bearer tenant123" â†’ returns 200 with tenant header
        if ($http_authorization = "Bearer tenant123") {
            add_header X-Tenant-ID tenant123 always;
            return 204;
        }

        # Otherwise, block
        return 403;
    }
}
